// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VicStelmak.DEFDA.Infrastructure.DataAccess;

#nullable disable

namespace VicStelmak.DEFDA.Infrastructure.DataAccess.Migrations
{
    [DbContext(typeof(RentalDbContextEf))]
    [Migration("20230912143035_MadeAddressAndEmailPropertiesOptional")]
    partial class MadeAddressAndEmailPropertiesOptional
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("VicStelmak.DEFDA.BusinessLogic.Models.AddressModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ApartmentNumber")
                        .HasColumnType("int");

                    b.Property<string>("BuildingNumber")
                        .HasMaxLength(5)
                        .HasColumnType("varchar");

                    b.Property<string>("City")
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<int?>("LeaseholderId")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<string>("Region")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("Street")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("LeaseholderId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("VicStelmak.DEFDA.BusinessLogic.Models.EmailModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<int?>("LeaseholderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LeaseholderId");

                    b.ToTable("EmailAddresses");
                });

            modelBuilder.Entity("VicStelmak.DEFDA.BusinessLogic.Models.LeaseholderModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("Leaseholders");
                });

            modelBuilder.Entity("VicStelmak.DEFDA.BusinessLogic.Models.AddressModel", b =>
                {
                    b.HasOne("VicStelmak.DEFDA.BusinessLogic.Models.LeaseholderModel", "LeaseholderModel")
                        .WithMany("Addresses")
                        .HasForeignKey("LeaseholderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("LeaseholderModel");
                });

            modelBuilder.Entity("VicStelmak.DEFDA.BusinessLogic.Models.EmailModel", b =>
                {
                    b.HasOne("VicStelmak.DEFDA.BusinessLogic.Models.LeaseholderModel", "LeaseholderModel")
                        .WithMany("EmailAddresses")
                        .HasForeignKey("LeaseholderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("LeaseholderModel");
                });

            modelBuilder.Entity("VicStelmak.DEFDA.BusinessLogic.Models.LeaseholderModel", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("EmailAddresses");
                });
#pragma warning restore 612, 618
        }
    }
}
