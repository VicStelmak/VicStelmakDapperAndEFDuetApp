@inject NavigationManager _navManager

<EditForm Model="@Leaseholder" OnValidSubmit="@SubmitLeaseholderAsync">
    <div class="form-group">
        <label>First Name</label>
        <InputText class="form-control" @bind-Value="Leaseholder.FirstName" />
    </div>
    <div class="form-group">
        <label>Last Name</label>
        <InputText class="form-control" @bind-Value="Leaseholder.LastName" />
    </div>
    <button type="submit" class="btn btn-primary" style="margin: 7px 0px">Update</button>
    <button type="button" class="btn btn-warning" style="margin: 7px 0px" @onclick="@(e => CancelEdit())">Cancel</button>
</EditForm>

@code {
    [Parameter]
    public LeaseholderModel Leaseholder { get; set; }

    private async void SubmitLeaseholderAsync()
    {
        if (string.IsNullOrEmpty(Leaseholder.FirstName) == false && string.IsNullOrEmpty(Leaseholder.LastName) == false)
        {
            await _leaseholderService.UpdateLeaseholderAsync(Leaseholder);
        }

        _navManager.NavigateTo(_navManager.Uri, true);
    }

    private void CancelEdit()
    {
        _navManager.NavigateTo(_navManager.Uri, true);
    }
}

